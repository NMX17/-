# 词频统计函数
def word_frequency_count(texts):
    word_freq_dict = {}
    for text in texts:
        words = jieba.cut(text)
        for word in words:
            if word in word_freq_dict:
                word_freq_dict[word] += 1
            else:
                word_freq_dict[word] = 1
    return word_freq_dict


# 对所有文本进行词频统计
all_texts = df['text'].tolist()
word_freq_result = word_frequency_count(all_texts)

'''
# 按照词频从高到低排序并输出结果
sorted_word_freq_result = sorted(word_freq_result.items(), key=lambda x: x[1], reverse=True)
print("词频统计结果：")
for word, freq in sorted_word_freq_result:
    if freq>100:
        print(word)
'''

def analyze_topics(texts, num_topics=None):
    tokenized_texts = [simple_preprocess(text) for text in texts]

    # 创建词典
    dictionary = Dictionary(tokenized_texts)

    # 将文本转换为词袋模型表示
    corpus = [dictionary.doc2bow(text) for text in tokenized_texts]

    # 分别筛选出正面和负面情感的文本对应的词袋表示
    positive_corpus = [corpus[i] for i, label in enumerate(Y) if label == 1]
    negative_corpus = [corpus[i] for i, label in enumerate(Y) if label == 0]

    # 训练HDP模型
    hdp_model_positive = HdpModel(positive_corpus, dictionary)
    hdp_model_negative = HdpModel(negative_corpus, dictionary)

    # 获取正面情感文本的前三个主题关键词
    positive_topics_keywords = []
    for topic_id in range(min(3, hdp_model_positive.get_topics().shape[0])):
        topic_words = hdp_model_positive.show_topic(topic_id, topn=3)
        positive_topics_keywords.extend([word for word, _ in topic_words])
    positive_topics_keywords = positive_topics_keywords[:3]

    # 获取负面情感文本的前三个主题关键词
    negative_topics_keywords = []
    for topic_id in range(min(3, hdp_model_negative.get_topics().shape[0])):
        topic_words = hdp_model_negative.show_topic(topic_id, topn=3)
    negative_topics_keywords.extend([word for word, _ in topic_words])
    negative_topics_keywords = negative_topics_keywords[:3]

    return positive_topics_keywords, negative_topics_keywords


# 调用主题分析函数，传入所有文本数据进行分析
all_texts = text
positive_topics_keywords, negative_topics_keywords = analyze_topics(all_texts)

print("正面情感文本的前三个主题关键词：")
print(positive_topics_keywords)

print("负面情感文本的前三个主题关键词：")
print(negative_topics_keywords)

plt.figure(figsize=(10,8),dpi=80)
